// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	mong "github.com/kornharem08/auction_example/lib/mong"
)

// IDatabase is an autogenerated mock type for the IDatabase type
type IDatabase struct {
	mock.Mock
}

// Collection provides a mock function with given fields: name
func (_m *IDatabase) Collection(name string) mong.ICollection {
	ret := _m.Called(name)

	if len(ret) == 0 {
		panic("no return value specified for Collection")
	}

	var r0 mong.ICollection
	if rf, ok := ret.Get(0).(func(string) mong.ICollection); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(mong.ICollection)
		}
	}

	return r0
}

// NewIDatabase creates a new instance of IDatabase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDatabase(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDatabase {
	mock := &IDatabase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
